package aerys.minko.scene.node.reflection
{
	import aerys.minko.scene.node.AbstractSceneNode;
	import aerys.minko.scene.node.mesh.geometry.Geometry;
	import aerys.minko.scene.node.mesh.geometry.primitive.QuadGeometry;
	import aerys.minko.type.Signal;
	import aerys.minko.type.data.DataProvider;
	
	public class ReflectionSurface extends AbstractSceneNode implements DataProvider
	{
		private var _mapSize		: uint;
		private var _geometry		: Geometry;
		
		private var _locked			: Boolean;
		private var _changed		: Signal;
		private var _dataDescriptor	: Object;
		
		
		public function get dataDescriptor() : Object
		{
			return _dataDescriptor;
		}
		
		public function get changed() : Signal
		{
			return _changed;
		}
		
		public function get locked() : Boolean
		{
			return _locked;
		}
		
		public function get mapSize() : uint
		{
			return _mapSize;
		}
		
		public function set geometry(v : Geometry) : void
		{
			_geometry = v;
		}
		
		
		/* from action */
//		public function run(scene		: IScene, 
//							visitor		: ISceneVisitor, 
//							renderer	: IRenderer) : Boolean
//		{
//			var reflectionSurface	: ReflectionSurface = ReflectionSurface(scene);
//			var localToWorld		: Matrix4x4			= visitor.transformData.localToWorld;
//			
//			localToWorld
//			.push()
//				.prepend(reflectionSurface.transform);
//			
//			TMP_VECTOR_X.set(1, 0, 0);
//			TMP_VECTOR_Y.set(0, 1, 0);
//			TMP_VECTOR_XY.set(1, 1, 0);
//			
//			localToWorld.transformVector(TMP_VECTOR_X, TMP_VECTOR_X);
//			localToWorld.transformVector(TMP_VECTOR_Y, TMP_VECTOR_Y);
//			localToWorld.transformVector(TMP_VECTOR_XY, TMP_VECTOR_XY);
//			
//			var reflectionData : ReflectionData = ReflectionData(FACTORY.create(true));
//			reflectionData.plane.setFromTriangle(
//				TMP_VECTOR_X.x,  TMP_VECTOR_X.y,  TMP_VECTOR_X.z,
//				TMP_VECTOR_Y.x,  TMP_VECTOR_Y.y,  TMP_VECTOR_Y.z,
//				TMP_VECTOR_XY.x, TMP_VECTOR_XY.y, TMP_VECTOR_XY.z
//			);
//			reflectionData.minko_reflection::size = reflectionSurface.size;
//			reflectionData.minko_reflection::type = ReflectionType.PLANAR;
//			
//			if (!visitor.worldData[ReflectionData])
//				visitor.worldData[ReflectionData] = new WorldDataList();
//			WorldDataList(visitor.worldData[ReflectionData]).push(reflectionData);
//			
//			visitor.visit(reflectionSurface.mesh);
//			
//			localToWorld.pop();
//			
//			return true;
//		}
		
		
		
		
		/* from data */
		
//		public function get type()	: int	{ return _type;		}
//		public function get size()	: uint	{ return _size;		}
//		public function get plane()	: Plane	{ return _plane;	}
//		
//		
//		public function get worldToView() : Matrix4x4
//		{
//			var camData	: CameraData = CameraData(_worldData[CameraData]);
//			
//			var rCamPos : Vector4 = _plane.reflect(camData.position);
//			var rCamDir : Vector4 = _plane.deltaReflect(camData.direction);
//			var rCamUp	: Vector4 = _plane.deltaReflect(camData.up);
//			
//			rCamDir.add(rCamPos);
//			
//			return Matrix4x4.lookAtLH(rCamPos, rCamDir, rCamUp, _worldToView);
//		}
//		
//		public function get localToView() : Matrix4x4
//		{
//			var localToWorld : Matrix4x4 = _transformData.localToWorld;
//			Matrix4x4.multiply(worldToView, localToWorld, _localToView);
//			
//			return _localToView;
//		}
//		
//		public function get projection() : Matrix4x4
//		{
//			var camData	: CameraData = CameraData(_worldData[CameraData]);
//			return camData.projection;
//		}
//		
//		public function get localToScreen() : Matrix4x4
//		{
//			Matrix4x4.multiply(projection, localToView, _localToScreen);
//			return _localToScreen;
//		}
//		
//		public function get localToUv() : Matrix4x4
//		{
//			Matrix4x4.multiply(SCREEN_TO_UV, localToScreen, _localToUv);
//			return _localToUv;
//		}
//		
//		public function get worldToPlane() : Matrix4x4
//		{
//			var planeOrigin : Vector4 = new Vector4(_plane.a * _plane.d, _plane.b * _plane.d, _plane.c * _plane.d);
//			var planeDirection : Vector4 = new Vector4(_plane.a, _plane.b, _plane.c);
//			
//			planeDirection.add(planeOrigin);
//			return Matrix4x4.lookAtLH(planeOrigin, planeDirection, ConstVector4.Y_AXIS);
//		}
//		
//		public function get localToPlane() : Matrix4x4
//		{
//			var localToWorld : Matrix4x4 = _transformData.localToWorld;
//			Matrix4x4.multiply(worldToPlane, localToWorld, _localToPlane);
//			
//			return _localToPlane;
//		}
//		
//		public function get cameraSide() : Number
//		{
//			var camData	: CameraData	= CameraData(_worldData[CameraData]);
//			var camPos	: Vector4		= camData.position;
//			
//			var newCamPos	: Vector4		= worldToPlane.transformVector(camPos);
//			
//			return newCamPos.z;
//		}
		
		public function ReflectionSurface(mapSize	: uint = 512,
										  geometry	: Geometry = null)
		{
			super();

			_changed	= new Signal();
			_mapSize	= mapSize;
			_geometry	= geometry || new QuadGeometry(true);
		}
		
		public function lock() : void
		{
			_locked = true;
		}
		
		public function unlock() : void
		{
			_locked = false;
		}
	}
}
